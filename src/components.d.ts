/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface CartButton {
        "i": number;
    }
    interface ProductCarousel {
        "componentWillLoad": () => Promise<void>;
    }
    interface ProductItem {
        "desc": string;
        "i": number;
        "name": string;
        "price": number;
        "src": string;
    }
    interface ProductText {
        "desc": string;
        "i": number;
        "price": number;
    }
}
export interface CartButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLCartButtonElement;
}
declare global {
    interface HTMLCartButtonElement extends Components.CartButton, HTMLStencilElement {
    }
    var HTMLCartButtonElement: {
        prototype: HTMLCartButtonElement;
        new (): HTMLCartButtonElement;
    };
    interface HTMLProductCarouselElement extends Components.ProductCarousel, HTMLStencilElement {
    }
    var HTMLProductCarouselElement: {
        prototype: HTMLProductCarouselElement;
        new (): HTMLProductCarouselElement;
    };
    interface HTMLProductItemElement extends Components.ProductItem, HTMLStencilElement {
    }
    var HTMLProductItemElement: {
        prototype: HTMLProductItemElement;
        new (): HTMLProductItemElement;
    };
    interface HTMLProductTextElement extends Components.ProductText, HTMLStencilElement {
    }
    var HTMLProductTextElement: {
        prototype: HTMLProductTextElement;
        new (): HTMLProductTextElement;
    };
    interface HTMLElementTagNameMap {
        "cart-button": HTMLCartButtonElement;
        "product-carousel": HTMLProductCarouselElement;
        "product-item": HTMLProductItemElement;
        "product-text": HTMLProductTextElement;
    }
}
declare namespace LocalJSX {
    interface CartButton {
        "i"?: number;
        "onCartChange"?: (event: CartButtonCustomEvent<any[]>) => void;
    }
    interface ProductCarousel {
    }
    interface ProductItem {
        "desc"?: string;
        "i"?: number;
        "name"?: string;
        "price"?: number;
        "src"?: string;
    }
    interface ProductText {
        "desc"?: string;
        "i"?: number;
        "price"?: number;
    }
    interface IntrinsicElements {
        "cart-button": CartButton;
        "product-carousel": ProductCarousel;
        "product-item": ProductItem;
        "product-text": ProductText;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "cart-button": LocalJSX.CartButton & JSXBase.HTMLAttributes<HTMLCartButtonElement>;
            "product-carousel": LocalJSX.ProductCarousel & JSXBase.HTMLAttributes<HTMLProductCarouselElement>;
            "product-item": LocalJSX.ProductItem & JSXBase.HTMLAttributes<HTMLProductItemElement>;
            "product-text": LocalJSX.ProductText & JSXBase.HTMLAttributes<HTMLProductTextElement>;
        }
    }
}
